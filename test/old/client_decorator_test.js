// Generated by LiveScript 1.2.0
(function(){
  var ClientDecorator, UserDecorator;
  require('../test_setup');
  ClientDecorator = require('../../client_decorator');
  UserDecorator = (function(superclass){
    var prototype = extend$((import$(UserDecorator, superclass).displayName = 'UserDecorator', UserDecorator), superclass).prototype, constructor = UserDecorator;
    UserDecorator.setter('fullName').on('firstName', 'lastName', function(){
      return this.fullName = [this.firstName, this.lastName].join(' ');
    });
    function UserDecorator(model, context){
      this.model = model;
      this.context = context;
      UserDecorator.superclass.apply(this, arguments);
    }
    prototype.decorate = function(){
      return superclass.prototype.decorate;
    };
    return UserDecorator;
  }(ClientDecorator));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
