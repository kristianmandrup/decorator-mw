// Generated by LiveScript 1.2.0
(function(){
  var rek, requires, assert, expect, Person, DecoratorMw, Decorations;
  rek = require('rekuire');
  requires = rek('requires');
  requires.test('test_setup');
  assert = require('chai').assert;
  expect = require('chai').expect;
  Person = requires.clazz('person');
  DecoratorMw = requires.file('decorator-mw');
  Decorations = requires.file('decorations');
  describe(Decorations(function(){
    var decs;
    decs = {};
    describe('create instance', function(){
      context('no args', function(){
        before(function(){
          return decs.empty = new Decorations;
        });
        specify('has Hash registry', function(){
          return decs.empty.repository.constructor.should.eql(Hash);
        });
        return specify('has no keys', function(){
          return _.keys(decs.empty.repository).length.should.eql(0);
        });
      });
      return context('with hash', function(){
        before(function(){
          return decs.basic = new Decorations({
            x: 1,
            y: 2
          });
        });
        specify('has Hash registry', function(){
          return decs.basic.repository.constructor.should.eql(Hash);
        });
        specify('has 2 keys', function(){
          return _.keys(decs.basic.repository).length.should.eql(2);
        });
        specify('repo x = 1', function(){
          return decs.basic.repository.x.should.eql(1);
        });
        return specify('repo y = 2', function(){
          return decs.basic.repository.y.should.eql(2);
        });
      });
    });
    describe('get', function(){
      context('empty repo', function(){
        before(function(){
          return decs.empty = new Decorations;
        });
        return specify('x not found', function(){
          return expect(decs.empty.get('x')).to.eql(void 8);
        });
      });
      context('repo with xx', function(){
        before(function(){
          return decs.basic = new Decorations({
            xx: 'y'
          });
        });
        return specify('not found', function(){
          return expect(decs.basic.get('x')).to.eql(void 8);
        });
      });
      return context('repo with x', function(){
        before(function(){
          return decs.basic = new Decorations({
            x: 'y'
          });
        });
        return specify('found', function(){
          return expect(decs.basic.get('x')).to.eql('y');
        });
      });
    });
    return describe('set', function(){
      context('repo x', function(){
        before(function(){
          return decs.setme = new Decorations;
        });
        return specify('x is found', function(){
          return expect(decs.setme.set('x')).to['throw'];
        });
      });
      return context('repo x = 2', function(){
        before(function(){
          decs.setme = new Decorations;
          return decs.setme.set('x', 2);
        });
        specify('x is found', function(){
          return expect(decs.setme.get('x')).to.eql(2);
        });
        return specify('xx is not found', function(){
          return expect(decs.setme.get('xx')).to.eql(void 8);
        });
      });
    });
  }));
}).call(this);
