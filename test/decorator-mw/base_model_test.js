// Generated by LiveScript 1.2.0
(function(){
  var requires, assert, expect, _, Class, Person, BaseModel;
  requires = require('../../requires');
  requires.test('test_setup');
  assert = require('chai').assert;
  expect = require('chai').expect;
  _ = require('prelude-ls');
  Class = require('jsclass/src/core').Class;
  Person = requires.clazz('person');
  BaseModel = requires.lib('base_model');
  describe('BaseModel', function(){
    var models;
    models = {};
    specify('is a Class', function(){
      return expect(BaseModel.constructor).to.eql(Class);
    });
    context('new empty model', function(){
      before(function(){
        return models.empty = new BaseModel;
      });
      return specify('is empty', function(){
        return expect(models.empty).to.be.empty;
      });
    });
    return context('person model w name', function(){
      var obj;
      before(function(){
        obj = {
          name: 'kris'
        };
        return models.kris = new BaseModel(obj);
      });
      return specify('name is kris', function(){
        return expect(models.kris.name).to.eql('kris');
      });
    });
  });
}).call(this);
