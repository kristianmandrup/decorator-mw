// Generated by LiveScript 1.2.0
(function(){
  var Class, Hash, OrderedHash, _, lo, requires, Debugger, Repo;
  Class = require('jsclass/src/core').Class;
  Hash = require('jsclass/src/hash').Hash;
  OrderedHash = require('jsclass/src/hash').OrderedHash;
  _ = require('prelude-ls');
  lo = require('lodash');
  require('sugar');
  requires = require('../requires');
  Debugger = require('../debugger');
  Repo = new Class({
    include: Debugger,
    initialize: function(hash){
      this.repository = new OrderedHash;
      if (hash === void 8) {
        return;
      }
      this.initRepo(hash);
      this.repository.setDefault(void 8);
      return this;
    },
    initRepo: function(hash){
      var self;
      self = this;
      switch (typeof hash) {
      case 'Hash':
      case 'OrderedHash':
        return hash.forEach(function(pair){
          return self.repository.store(pair.key, pair.value);
        });
      case 'object':
        return _.keys(hash).each(function(name){
          return self.repository.store(name, hash[name]);
        });
      default:
        throw Error("Must be a Hash like object, was : " + typeof klass + " " + hash);
      }
    }
  });
  module.exports = Repo;
}).call(this);
