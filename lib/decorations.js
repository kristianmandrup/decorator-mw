// Generated by LiveScript 1.2.0
(function(){
  var Class, Module, Hash, _, requires, Debugger, Decorations;
  Class = require('jsclass/src/core').Class;
  Module = require('jsclass/src/core').Module;
  Hash = require('jsclass/src/hash').Hash;
  _ = require('prelude-ls');
  require('sugar');
  requires = require('../requires');
  Debugger = require('../debugger');
  Decorations = new Class({
    include: Debugger,
    initialize: function(decorations){
      var self;
      self = this;
      this.repository = {};
      if (decorations === void 8) {
        return;
      }
      if (!_.isType('Object', decorations)) {
        throw Error("Must be an Object, was : " + typeof klass + " " + decorations);
      }
      _.keys(decorations).each(function(name){
        return self.repository[name] = decorations[name];
      });
      return this;
    },
    get: function(modelName){
      return this.repository[modelName];
    },
    set: function(modelName, klass){
      if (!_.isType('Function', klass)) {
        throw Error("klass to be set must be a Function, was: " + typeof klass + " :: " + klass);
      }
      return this.repository[modelName] = klass;
    }
  });
  module.exports = Decorations;
}).call(this);
