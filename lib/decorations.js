// Generated by LiveScript 1.2.0
(function(){
  var Class, Module, Hash, _, lo, requires, Repo, Debugger, Decorations;
  Class = require('jsclass/src/core').Class;
  Module = require('jsclass/src/core').Module;
  Hash = require('jsclass/src/hash').Hash;
  _ = require('prelude-ls');
  lo = require('lodash');
  require('sugar');
  requires = require('../requires');
  Repo = requires.lib('repo');
  Debugger = requires.file('debugger');
  Decorations = new Class(Repo, {
    initialize: function(hash){
      return this.callSuper();
    },
    isEmpty: function(){
      return this.repository.isEmpty();
    },
    find: function(modelName){
      return this.repository.get(modelName);
    },
    register: function(modelName, klass){
      if (!_.isType('Function', klass)) {
        throw Error("klass to be set must be a Function, was: " + typeof klass + " , " + klass);
      }
      return this.repository.store(modelName, klass);
    }
  });
  module.exports = Decorations;
}).call(this);
